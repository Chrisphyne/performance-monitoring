{"remainingRequest":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\Users\\dell\\Documents\\javascript\\vdm\\src\\main\\webapp\\app\\modules\\administration\\health\\health.tsx","dependencies":[{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\src\\main\\webapp\\app\\modules\\administration\\health\\health.tsx","mtime":1607808239260},{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\eslint-loader\\dist\\cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7DQppbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnOw0KaW1wb3J0IHsgVHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtamhpcHN0ZXInOw0KaW1wb3J0IHsgVGFibGUsIEJhZGdlLCBDb2wsIFJvdywgQnV0dG9uIH0gZnJvbSAncmVhY3RzdHJhcCc7DQppbXBvcnQgeyBGb250QXdlc29tZUljb24gfSBmcm9tICdAZm9ydGF3ZXNvbWUvcmVhY3QtZm9udGF3ZXNvbWUnOw0KaW1wb3J0IHsgc3lzdGVtSGVhbHRoIH0gZnJvbSAnLi4vYWRtaW5pc3RyYXRpb24ucmVkdWNlcic7DQppbXBvcnQgSGVhbHRoTW9kYWwgZnJvbSAnLi9oZWFsdGgtbW9kYWwnOw0KaW1wb3J0IHsgQ0NhcmQsIENDYXJkSGVhZGVyIH0gZnJvbSAnQGNvcmV1aS9yZWFjdCc7DQpleHBvcnQgY29uc3QgSGVhbHRoUGFnZSA9IChwcm9wcykgPT4gew0KICAgIGNvbnN0IFtoZWFsdGhPYmplY3QsIHNldEhlYWx0aE9iamVjdF0gPSB1c2VTdGF0ZSh7fSk7DQogICAgY29uc3QgW3Nob3dNb2RhbCwgc2V0U2hvd01vZGFsXSA9IHVzZVN0YXRlKGZhbHNlKTsNCiAgICB1c2VFZmZlY3QoKCkgPT4gew0KICAgICAgICBwcm9wcy5zeXN0ZW1IZWFsdGgoKTsNCiAgICB9LCBbXSk7DQogICAgY29uc3QgZ2V0U3lzdGVtSGVhbHRoID0gKCkgPT4gew0KICAgICAgICBpZiAoIXByb3BzLmlzRmV0Y2hpbmcpIHsNCiAgICAgICAgICAgIHByb3BzLnN5c3RlbUhlYWx0aCgpOw0KICAgICAgICB9DQogICAgfTsNCiAgICBjb25zdCBnZXRTeXN0ZW1IZWFsdGhJbmZvID0gKG5hbWUsIGhlYWx0aE9iaikgPT4gKCkgPT4gew0KICAgICAgICBzZXRTaG93TW9kYWwodHJ1ZSk7DQogICAgICAgIHNldEhlYWx0aE9iamVjdChPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGhlYWx0aE9iaiksIHsgbmFtZSB9KSk7DQogICAgfTsNCiAgICBjb25zdCBoYW5kbGVDbG9zZSA9ICgpID0+IHNldFNob3dNb2RhbChmYWxzZSk7DQogICAgY29uc3QgcmVuZGVyTW9kYWwgPSAoKSA9PiBSZWFjdC5jcmVhdGVFbGVtZW50KEhlYWx0aE1vZGFsLCB7IGhlYWx0aE9iamVjdDogaGVhbHRoT2JqZWN0LCBoYW5kbGVDbG9zZTogaGFuZGxlQ2xvc2UsIHNob3dNb2RhbDogc2hvd01vZGFsIH0pOw0KICAgIGNvbnN0IHsgaGVhbHRoLCBpc0ZldGNoaW5nIH0gPSBwcm9wczsNCiAgICBjb25zdCBkYXRhID0gKGhlYWx0aCB8fCB7fSkuY29tcG9uZW50cyB8fCB7fTsNCiAgICBjb25zdCBzdHlsZSA9IHsNCiAgICAgICAgJ3BhZGRpbmdMZWZ0JzogJzEwcHgnLA0KICAgICAgICAncGFkZGluZ1JpZ2h0JzogJzEwcHgnDQogICAgfTsNCiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ0NhcmQsIG51bGwsDQogICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsgc3R5bGU6IHN0eWxlIH0sDQogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENDYXJkSGVhZGVyLCBudWxsLA0KICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImgyIiwgeyBpZDogImhlYWx0aC1wYWdlLWhlYWRpbmciIH0sICJIZWFsdGggQ2hlY2tzIiksDQogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgicCIsIG51bGwsDQogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7IG9uQ2xpY2s6IGdldFN5c3RlbUhlYWx0aCwgY29sb3I6IGlzRmV0Y2hpbmcgPyAnYnRuIGJ0bi1kYW5nZXInIDogJ2J0biBidG4tcHJpbWFyeScsIGRpc2FibGVkOiBpc0ZldGNoaW5nIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEZvbnRBd2Vzb21lSWNvbiwgeyBpY29uOiAic3luYyIgfSksDQogICAgICAgICAgICAgICAgICAgICAgICAiXHUwMEEwIiwNCiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVHJhbnNsYXRlLCB7IGNvbXBvbmVudDogInNwYW4iLCBjb250ZW50S2V5OiAiaGVhbHRoLnJlZnJlc2guYnV0dG9uIiB9LCAiUmVmcmVzaCIpKSkpLA0KICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3csIG51bGwsDQogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChDb2wsIHsgbWQ6ICIxMiIgfSwNCiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZSwgeyBib3JkZXJlZDogdHJ1ZSwgImFyaWEtZGVzY3JpYmVkYnkiOiAiaGVhbHRoLXBhZ2UtaGVhZGluZyIgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRoZWFkIiwgbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0ciIsIG51bGwsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRoIiwgbnVsbCwgIlNlcnZpY2UgTmFtZSIpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0aCIsIG51bGwsICJTdGF0dXMiKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGgiLCBudWxsLCAiRGV0YWlscyIpKSksDQogICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0Ym9keSIsIG51bGwsIE9iamVjdC5rZXlzKGRhdGEpLm1hcCgoY29uZmlnUHJvcEtleSwgY29uZmlnUHJvcEluZGV4KSA9PiBjb25maWdQcm9wS2V5ICE9PSAnc3RhdHVzJyA/IChSZWFjdC5jcmVhdGVFbGVtZW50KCJ0ciIsIHsga2V5OiBjb25maWdQcm9wSW5kZXggfSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0ZCIsIG51bGwsIGNvbmZpZ1Byb3BLZXkpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRkIiwgbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCYWRnZSwgeyBjb2xvcjogZGF0YVtjb25maWdQcm9wS2V5XS5zdGF0dXMgIT09ICdVUCcgPyAnZGFuZ2VyJyA6ICdzdWNjZXNzJyB9LCBkYXRhW2NvbmZpZ1Byb3BLZXldLnN0YXR1cykpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRkIiwgbnVsbCwgZGF0YVtjb25maWdQcm9wS2V5XS5kZXRhaWxzID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoImEiLCB7IG9uQ2xpY2s6IGdldFN5c3RlbUhlYWx0aEluZm8oY29uZmlnUHJvcEtleSwgZGF0YVtjb25maWdQcm9wS2V5XSkgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChGb250QXdlc29tZUljb24sIHsgaWNvbjogImV5ZSIgfSkpKSA6IG51bGwpKSkgOiBudWxsKSkpKSksDQogICAgICAgICAgICByZW5kZXJNb2RhbCgpKSkpOw0KfTsNCmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IChzdG9yZVN0YXRlKSA9PiAoew0KICAgIGhlYWx0aDogc3RvcmVTdGF0ZS5hZG1pbmlzdHJhdGlvbi5oZWFsdGgsDQogICAgaXNGZXRjaGluZzogc3RvcmVTdGF0ZS5hZG1pbmlzdHJhdGlvbi5sb2FkaW5nLA0KfSk7DQpjb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSB7IHN5c3RlbUhlYWx0aCB9Ow0KZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoSGVhbHRoUGFnZSk7DQo="},{"version":3,"file":"C:\\Users\\dell\\Documents\\javascript\\vdm\\src\\main\\webapp\\app\\modules\\administration\\health\\health.tsx","sourceRoot":"","sources":["C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\Users\\dell\\Documents\\javascript\\vdm\\src\\main\\webapp\\app\\modules\\administration\\health\\health.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Translate } from 'react-jhipster';\r\nimport { Table, Badge, Col, Row, Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { systemHealth } from '../administration.reducer';\r\nimport HealthModal from './health-modal';\r\nimport { CCard, CCardHeader } from '@coreui/react';\r\n\r\nexport interface IHealthPageProps extends StateProps, DispatchProps {}\r\n\r\nexport const HealthPage = (props: IHealthPageProps) => {\r\n  const [healthObject, setHealthObject] = useState({});\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.systemHealth();\r\n  }, []);\r\n\r\n  const getSystemHealth = () => {\r\n    if (!props.isFetching) {\r\n      props.systemHealth();\r\n    }\r\n  };\r\n\r\n  const getSystemHealthInfo = (name, healthObj) => () => {\r\n    setShowModal(true);\r\n    setHealthObject({ ...healthObj, name });\r\n  };\r\n\r\n  const handleClose = () => setShowModal(false);\r\n\r\n  const renderModal = () => <HealthModal healthObject={healthObject} handleClose={handleClose} showModal={showModal} />;\r\n\r\n  const { health, isFetching } = props;\r\n  const data = (health || {}).components || {};\r\n  const style = {\r\n    'paddingLeft':'10px',\r\n    'paddingRight':'10px'\r\n  }\r\n\r\n  return (\r\n    <CCard>\r\n      <div style={style}>\r\n        <CCardHeader>\r\n          <h2 id=\"health-page-heading\">Health Checks</h2>\r\n          <p>\r\n            <Button onClick={getSystemHealth} color={isFetching ? 'btn btn-danger' : 'btn btn-primary'} disabled={isFetching}>\r\n              <FontAwesomeIcon icon=\"sync\" />\r\n              &nbsp;\r\n              <Translate component=\"span\" contentKey=\"health.refresh.button\">\r\n                Refresh\r\n              </Translate>\r\n            </Button>\r\n          </p>\r\n        </CCardHeader>\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <Table bordered aria-describedby=\"health-page-heading\">\r\n            <thead>\r\n              <tr>\r\n                <th>Service Name</th>\r\n                <th>Status</th>\r\n                <th>Details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.keys(data).map((configPropKey, configPropIndex) =>\r\n                configPropKey !== 'status' ? (\r\n                  <tr key={configPropIndex}>\r\n                    <td>{configPropKey}</td>\r\n                    <td>\r\n                      <Badge color={data[configPropKey].status !== 'UP' ? 'danger' : 'success'}>{data[configPropKey].status}</Badge>\r\n                    </td>\r\n                    <td>\r\n                      {data[configPropKey].details ? (\r\n                        <a onClick={getSystemHealthInfo(configPropKey, data[configPropKey])}>\r\n                          <FontAwesomeIcon icon=\"eye\" />\r\n                        </a>\r\n                      ) : null}\r\n                    </td>\r\n                  </tr>\r\n                ) : null\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n      {renderModal()}\r\n    </div>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  health: storeState.administration.health,\r\n  isFetching: storeState.administration.loading,\r\n});\r\n\r\nconst mapDispatchToProps = { systemHealth };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HealthPage);\r\n"]}]}