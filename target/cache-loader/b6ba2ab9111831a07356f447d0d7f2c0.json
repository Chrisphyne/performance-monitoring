{"remainingRequest":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\Users\\dell\\Documents\\javascript\\vdm\\src\\main\\webapp\\app\\entities\\enrollment\\enrollment.tsx","dependencies":[{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\src\\main\\webapp\\app\\entities\\enrollment\\enrollment.tsx","mtime":1607937330999},{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\eslint-loader\\dist\\cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsNCmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7DQppbXBvcnQgeyBSb3csIENvbCwgQWxlcnQgfSBmcm9tICdyZWFjdHN0cmFwJzsNCmltcG9ydCB7IENDYXJkLCBDQ2FyZEhlYWRlciB9IGZyb20gJ0Bjb3JldWkvcmVhY3QnOw0KaW1wb3J0IFFSQ29kZSBmcm9tICJyZWFjdC1xci1jb2RlIjsNCmV4cG9ydCBjb25zdCBFbnJvbGxtZW50ID0gKHByb3BzKSA9PiB7DQogICAgY29uc3QgeyBhY2NvdW50IH0gPSBwcm9wczsNCiAgICBjb25zdCBzdHlsZSA9IHsNCiAgICAgICAgJ3BhZGRpbmdMZWZ0JzogJzEwcHgnLA0KICAgICAgICAncGFkZGluZ1JpZ2h0JzogJzEwcHgnLA0KICAgICAgICAncGFkZGluZ1RvcCc6ICcxMHB4JywNCiAgICAgICAgJ3BhZGRpbmdCb3R0b20nOiAnMTBweCcNCiAgICB9Ow0KICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChDQ2FyZCwgbnVsbCwNCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChDQ2FyZEhlYWRlciwgbnVsbCwgIkVucm9sbG1lbnQgJiBQcm92aXNpb24iKSwNCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBzdHlsZTogc3R5bGUgfSwNCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInAiLCBudWxsLA0KICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQWxlcnQsIHsgY29sb3I6ICJzdWNjZXNzIiB9LA0KICAgICAgICAgICAgICAgICAgICAiRm9sbG93IHRoZSBzdGVwcyBiZWxvdyB0byBlbnJvbGwgYW5kIHByb3Zpc2lvbiBhIGRldmljZTogIiwNCiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiYnIiLCBudWxsKSwNCiAgICAgICAgICAgICAgICAgICAgIlx1MDBBMFx1MDBBMFx1MDBBMFx1MDBBMDEuIE9uIGEgbmV3IG9yIGZhY3RvcnktcmVzZXQgZGV2aWNlLCB0YXAgdGhlIHNjcmVlbiBzaXggdGltZXMgaW4gdGhlIHNhbWUgc3BvdC4gVGhpcyB0cmlnZ2VycyB0aGUgZGV2aWNlIHRvIHByb21wdCB5b3UgdG8gc2NhbiBhIFFSIGNvZGUuICIsDQogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImJyIiwgbnVsbCksDQogICAgICAgICAgICAgICAgICAgICJcdTAwQTBcdTAwQTBcdTAwQTBcdTAwQTAyLlNjYW4gdGhlIFFSIGNvZGUgYmVsb3cgICB0byBlbnJvbGwgYW5kIHByb3Zpc2lvbiB0aGUgZGV2aWNlLiIsDQogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImJyIiwgbnVsbCksDQogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImJyIiwgbnVsbCksDQogICAgICAgICAgICAgICAgICAgICJcdTAwQTBcdTAwQTBcdTAwQTBcdTAwQTAgTkI6IFRvIGVucm9sbCB3aXRoIHNwZWNpZmljL2V4aXN0aW5nIHVzZXIgSUQgZ28gdG8gdGhlIHNwZWNpZmljIERldmljZSBEZXRhaWxzIHBhZ2UiKSksDQogICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdywgbnVsbCwNCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENvbCwgeyBzbTogIjEyIiB9LA0KICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdywgbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29sLCB7IG1kOiAiNCIgfSksDQogICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENvbCwgeyBtZDogIjQiIH0sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChRUkNvZGUsIHsgdmFsdWU6ICd7ImFuZHJvaWQuYXBwLmV4dHJhLlBST1ZJU0lPTklOR19ERVZJQ0VfQURNSU5fQ09NUE9ORU5UX05BTUUiOiJjb20uZ29vZ2xlLmFuZHJvaWQuYXBwcy53b3JrLmNsb3VkZHBjLy5yZWNlaXZlcnMuQ2xvdWREZXZpY2VBZG1pblJlY2VpdmVyIiwiYW5kcm9pZC5hcHAuZXh0cmEuUFJPVklTSU9OSU5HX0RFVklDRV9BRE1JTl9TSUdOQVRVUkVfQ0hFQ0tTVU0iOiJJNVl2UzBPNWhYWTQ2bWIwMUJsUmpxNG9KSkdzMmt1VWNIdlZrQVBFWGxnIiwiYW5kcm9pZC5hcHAuZXh0cmEuUFJPVklTSU9OSU5HX0RFVklDRV9BRE1JTl9QQUNLQUdFX0RPV05MT0FEX0xPQ0FUSU9OIjoiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vbWFuYWdlZC9kb3dubG9hZE1hbmFnaW5nQXBwP2lkZW50aWZpZXI9c2V0dXAiLCJhbmRyb2lkLmFwcC5leHRyYS5QUk9WSVNJT05JTkdfQURNSU5fRVhUUkFTX0JVTkRMRSI6eyJjb20uZ29vZ2xlLmFuZHJvaWQuYXBwcy53b3JrLmNsb3VkZHBjLkVYVFJBX0VOUk9MTE1FTlRfVE9LRU4iOiJYWktNSUxHTVhDVVNFTU9PUVRNSiJ9JyB9KSkpKSkpKSk7DQp9Ow0KY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RvcmVTdGF0ZSA9PiAoew0KICAgIGFjY291bnQ6IHN0b3JlU3RhdGUuYXV0aGVudGljYXRpb24uYWNjb3VudCwNCiAgICBpc0F1dGhlbnRpY2F0ZWQ6IHN0b3JlU3RhdGUuYXV0aGVudGljYXRpb24uaXNBdXRoZW50aWNhdGVkLA0KfSk7DQpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcykoRW5yb2xsbWVudCk7DQo="},{"version":3,"file":"C:\\Users\\dell\\Documents\\javascript\\vdm\\src\\main\\webapp\\app\\entities\\enrollment\\enrollment.tsx","sourceRoot":"","sources":["C:\\Users\\dell\\Documents\\javascript\\vdm\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\Users\\dell\\Documents\\javascript\\vdm\\src\\main\\webapp\\app\\entities\\enrollment\\enrollment.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAoB,MAAM,OAAO,CAAC;AACzC,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAU,GAAG,EAAE,GAAG,EAAO,KAAK,EAAE,MAAM,YAAY,CAAC;AAO1D,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,MAAM,MAAM,eAAe,CAAC;AAGnC,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,KAAuB,EAAE,EAAE;IACpD,MAAM,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;IAE1B,MAAM,KAAK,GAAG;QACZ,aAAa,EAAC,MAAM;QACpB,cAAc,EAAC,MAAM;QACrB,YAAY,EAAC,MAAM;QACnB,eAAe,EAAC,MAAM;KACvB,CAAA;IAED,OAAO,CACL,oBAAC,KAAK;QACJ,oBAAC,WAAW,iCAEE;QACd,6BAAK,KAAK,EAAE,KAAK;YACb;gBACE,oBAAC,KAAK,IAAC,KAAK,EAAC,SAAS;;oBACqC,+BAAK;;oBAEJ,+BAAK;;oBACuB,+BAAK;oBAAA,+BAAK;mIAE1F,CACN;YACN,oBAAC,GAAG;gBACF,oBAAC,GAAG,IAAC,EAAE,EAAC,IAAI;oBACV,oBAAC,GAAG;wBACF,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG,GACL;wBACN,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG;4BACT,oBAAC,MAAM,IAAC,KAAK,EAAC,shBAAshB,GAAG,CACniB,CACF,CACF,CACF,CACF,CACA,CACP,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;IACrC,OAAO,EAAE,UAAU,CAAC,cAAc,CAAC,OAAO;IAC1C,eAAe,EAAE,UAAU,CAAC,cAAc,CAAC,eAAe;CAC3D,CAAC,CAAC;AAIH,eAAe,OAAO,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col,Badge,Alert } from 'reactstrap';\r\nimport { Translate, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { APP_DATE_FORMAT } from 'app/config/constants';\r\nimport { languages } from 'app/config/translation';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { CCard, CCardHeader } from '@coreui/react';\r\nimport QRCode from \"react-qr-code\";\r\nexport type IEnrollmentProps = StateProps;\r\n\r\nexport const Enrollment = (props: IEnrollmentProps) => {\r\n  const { account } = props;\r\n\r\n  const style = {\r\n    'paddingLeft':'10px',\r\n    'paddingRight':'10px',\r\n    'paddingTop':'10px',\r\n    'paddingBottom':'10px'\r\n  }\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        Enrollment & Provision\r\n      </CCardHeader>\r\n      <div style={style}>\r\n          <p>\r\n            <Alert color=\"success\">\r\n              Follow the steps below to enroll and provision a device: <br/>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;1. On a new or factory-reset device, tap the screen six times in the same spot.\r\n              This triggers the device to prompt you to scan a QR code. <br/>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;2.Scan the QR code below   to enroll and provision the device.<br/><br/>\r\n              &nbsp;&nbsp;&nbsp;&nbsp; NB: To enroll with specific/existing user ID go to the specific Device Details page\r\n            </Alert>\r\n          </p>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Row>\r\n              <Col md=\"4\">\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <QRCode value='{\"android.app.extra.PROVISIONING_DEVICE_ADMIN_COMPONENT_NAME\":\"com.google.android.apps.work.clouddpc/.receivers.CloudDeviceAdminReceiver\",\"android.app.extra.PROVISIONING_DEVICE_ADMIN_SIGNATURE_CHECKSUM\":\"I5YvS0O5hXY46mb01BlRjq4oJJGs2kuUcHvVkAPEXlg\",\"android.app.extra.PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION\":\"https://play.google.com/managed/downloadManagingApp?identifier=setup\",\"android.app.extra.PROVISIONING_ADMIN_EXTRAS_BUNDLE\":{\"com.google.android.apps.work.clouddpc.EXTRA_ENROLLMENT_TOKEN\":\"XZKMILGMXCUSEMOOQTMJ\"}' />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </CCard>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = storeState => ({\r\n  account: storeState.authentication.account,\r\n  isAuthenticated: storeState.authentication.isAuthenticated,\r\n});\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\nexport default connect(mapStateToProps)(Enrollment);\r\n"]}]}