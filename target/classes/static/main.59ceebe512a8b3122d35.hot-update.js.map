{"version":3,"file":"main.59ceebe512a8b3122d35.hot-update.js","sources":["webpack:///./src/main/webapp/app/config/store.ts"],"sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport promiseMiddleware from 'redux-promise-middleware';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer, { IRootState } from 'app/shared/reducers';\r\nimport DevTools from './devtools';\r\nimport errorMiddleware from './error-middleware';\r\nimport notificationMiddleware from './notification-middleware';\r\nimport loggerMiddleware from './logger-middleware';\r\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\r\n\r\nconst defaultMiddlewares = [\r\n  thunkMiddleware,\r\n  errorMiddleware,\r\n  notificationMiddleware,\r\n  promiseMiddleware,\r\n  loadingBarMiddleware(),\r\n  loggerMiddleware,\r\n];\r\nconst composedMiddlewares = middlewares =>\r\n  process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n      applyMiddleware(...middlewares),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n    : compose(applyMiddleware(...defaultMiddlewares, ...middlewares));\r\n\r\nconst initialize = (initialState?: IRootState, middlewares = []) => createStore(reducer, initialState, composedMiddlewares(middlewares));\r\n\r\nexport default initialize;\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AAEA;AACA;;;;;A","sourceRoot":""}